#!/bin/sh

#export LC_MESSAGES=de_DE.UTF-8
#export LC_LANG=de_DE.UTF-8
#export LANG=de_DE.UTF-8
#export LC_ALL=de_DE.UTF8
#export VDR_LANG=de_DE@euro
#export VDR_CHARSET_OVERRIDE=ISO-8859-9

# assume 4K TV. If not, Full HD
RESOLUTION="2160p50hz"
if [ "$(cat /sys/class/display/mode | grep 2160p50hz)" = $RESOLUTION ];
then
        RES_FROM="1080p50hz"
        RESOLUTION="2160p50hz420"
else
        RES_FROM="1080p60hz"
        RESOLUTION="1080p50hz"
fi

#echo 420,10bit > /sys/class/amhdmitx/amhdmitx0/attr
#echo 1080p50 > /sys/class/display/mode
#echo 2160p50 > /sys/class/display/mode

# use autoselect 4k/1080p
echo $RES_FROM > /sys/class/display/mode
sleep 1
#echo 2160p50 > /sys/class/display/mode
echo $RESOLUTION > /sys/class/display/mode

# not needed
#echo 0 > /sys/class/video/blackout_policy
#echo 3 > /sys/module/amvdec_h265/parameters/double_write_mode
#echo 3 > /sys/module/amvdec_vp9/parameters/double_write_mode

# keeps ssh alive after vdrkill
umount /dev/pts/
mount devpts /dev/pts -t devpts

#start atd
atd

#/usr/local/bin/hyperion_start
mkdir -p /var/run/vdradmin
sudo LANG=de_DE.utf8 /usr/bin/vdradmind

#mount /dev/sdb1 /video
#mount /dev/mmcblk1p1 /video

# change to virtual terminal to control VDR from there
# this is required for FLIRC only
# check if FLIRC is avaiable
if [ "$(lsusb | grep Clay | awk '{print $(NF-1)}')" = 'Clay' ];
then
	# only change terminal, if FLIRC is connected
        TERMINAL="-t /dev/tty7"
        /bin/chvt 7
else
	TERMINAL=""
fi


VDRPRG="DISPLAY=:0.0 /usr/local/bin/vdr"

#VDROPTIONS="-D 0 -w 60 -l 0 -v /video -s /usr/local/bin/vdrshutdown.sh"
#VDROPTIONS="-l 0 -w 60 --lirc=/var/run/lirc/lircd -v /video -s /usr/local/bin/vdrshutdown.sh"

# FLIRC requires a terminal to control VDR from
# This has been set to 7 above
VDROPTIONS="$TERMINAL -l 0 --lirc -w 60  -v /video -c /var/lib/vdr -s /usr/local/bin/vdrshutdown.sh"
#VDROPTIONS="-l 0 --lirc -w 60  -v /video -c /var/lib/vdr -s /usr/local/bin/vdrshutdown.sh"
#VDROPTIONS="-l 0 -w 60  -v /video -c /var/lib/vdr -s /usr/local/bin/vdrshutdown.sh"
# For other options see manpage vdr.1

# Start in detach-mode. svdrpsend PLUG softhddrm ATTA will attach
# This will be done by a watchdog that kills itself once TV has been switched on

# start softhdodroid in detach mode, if kodi is running (e.g. vdr crashes during KODI)
if pgrep kodi.bin >/dev/null 2>&1
then
	OUTPUT="-P'softhdodroid -a hw:CARD=AMLAUGESOUND,DEV=0 -D'"
else
	OUTPUT="-P'softhdodroid -a hw:CARD=AMLAUGESOUND,DEV=0'"
fi

VDRPLUGINS1="  \
"
# OUTPUT PLUGIN here
VDRPLUGINS2=" \
-P'skindesigner -l /var/lib/vdr/plugins/skindesigner/logos' \
-Pstreamdev-server \
-P'externalplayer' \
-Pweatherforecast \
-Ptvguideng \
-P'tvscraper -d /video/tvscraper' \
-Posdteletext \
-Pfemon \
-Pfavorites \
-Pvnsiserver \
-Pfritzbox \
-Psysteminfo \
-Ptargavfd \
-Prestfulapi \
-Plive \
-Premoteosd \
-P'cdplayer -d /dev/dr0' \
-P'dvd -C/dev/sr0' \
-Pmusic \
-P'mp3 -B /var/lib/cddb -S mp3' \
-Pspan \
-P'osd2web -s svg -l /var/lib/vdr/plugins/skindesigner/logos' \
-Pradio \
-P'markad -b /usr/local/bin' \
-Pepgsearch \
"

#-P'remote -i /dev/input/by-path/platform-ff808040.meson-remote-event-kbd' \

#only needed, if client is needed (without USB device)
#-Pstreamdev-client \

#VDRCMD="nohup sh -c '$VDRPRG $VDROPTIONS $VDRPLUGINS $*' > /dev/null 2> /dev/null < /dev/null"
VDRCMD="$VDRPRG $VDROPTIONS $VDRPLUGINS1 $OUTPUT $VDRPLUGINS2 $*"

KILL="/usr/bin/killall -q -TERM"

# Detect whether the DVB driver is already loaded
# and return 0 if it *is* loaded, 1 if not:
DriverLoaded()
{
  return 1
}

# Load all DVB driver modules needed for your hardware:
LoadDriver()
{
  return 0
}

# Unload all DVB driver modules loaded in LoadDriver():
UnloadDriver()
{
  return 0
}

# Load driver if it hasn't been loaded already:
if ! DriverLoaded; then
   LoadDriver
   fi

while (true) do
      eval "$VDRCMD"
#      if test $? -eq 0 -o $? -eq 2; then /usr/local/bin/hyperion_stop; pkill runvdr; exit; fi
      if test $? -eq 0 -o $? -eq 2; then exit; fi      
      echo "`date` reloading DVB driver"
      $KILL $VDRPRG
#      sleep 5
      UnloadDriver
      LoadDriver
      echo "`date` restarting VDR"
      done
